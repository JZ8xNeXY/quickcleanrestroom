"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/loadGoogleMapsAPI.ts":
/*!****************************************!*\
  !*** ./src/utils/loadGoogleMapsAPI.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadGoogleMapsAPI: function() { return /* binding */ loadGoogleMapsAPI; }\n/* harmony export */ });\n//GoogleMapsAPIのマニュアルで公表されている式を修正\nvar loadGoogleMapsAPI = function loadGoogleMapsAPI(setMap) {\n  // Google Maps APIの設定\n  var config = {\n    key: \"AIzaSyAShpWqkPZNUZPyQfTIVRn2IPhNDoYmqRg\" || 0,\n    v: 'beta'\n  };\n\n  // Google Maps APIのスクリプトを非同期でロードする関数\n  var loadScript = function loadScript(src) {\n    return new Promise(function (resolve, reject) {\n      var script = document.createElement('script');\n      script.src = src;\n      script.onload = function () {\n        return resolve();\n      };\n      script.onerror = function () {\n        return reject(new Error('Script load error'));\n      };\n      document.head.appendChild(script);\n    });\n  };\n\n  // Google Maps APIのスクリプトURLを作成\n  var scriptSrc = \"https://maps.googleapis.com/maps/api/js?key=\".concat(config.key, \"&v=\").concat(config.v)[\"catch\"](function (error) {\n    console.error(error); // エラーが発生したらログに出力\n  });\n};\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvbG9hZEdvb2dsZU1hcHNBUEkudHMiLCJtYXBwaW5ncyI6Ijs7OztBQU9BO0FBQ08sSUFBTUEsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FDNUJDLE1BQW9FLEVBQ2pFO0VBQ0g7RUFDQSxJQUFNQyxNQUF3QixHQUFHO0lBQy9CQyxHQUFHLEVBQUVDLHlDQUErQixJQUFJLENBQUU7SUFDMUNHLENBQUMsRUFBRTtFQUNMLENBQUM7O0VBRUQ7RUFDQSxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBVUEsQ0FBSUMsR0FBVyxFQUFvQjtJQUNqRCxPQUFPLElBQUlDLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLE1BQU0sRUFBSztNQUN0QyxJQUFNQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFFBQVEsQ0FBQztNQUMvQ0YsTUFBTSxDQUFDSixHQUFHLEdBQUdBLEdBQUc7TUFDaEJJLE1BQU0sQ0FBQ0csTUFBTSxHQUFHO1FBQUEsT0FBTUwsT0FBTyxDQUFDLENBQUM7TUFBQTtNQUMvQkUsTUFBTSxDQUFDSSxPQUFPLEdBQUc7UUFBQSxPQUFNTCxNQUFNLENBQUMsSUFBSU0sS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7TUFBQTtNQUM3REosUUFBUSxDQUFDSyxJQUFJLENBQUNDLFdBQVcsQ0FBQ1AsTUFBTSxDQUFDO0lBQ25DLENBQUMsQ0FBQztFQUNKLENBQUM7O0VBRUQ7RUFDQSxJQUFNUSxTQUFTLEdBQUcsK0NBQUFDLE1BQUEsQ0FBK0NwQixNQUFNLENBQUNDLEdBQUcsU0FBQW1CLE1BQUEsQ0FBTXBCLE1BQU0sQ0FBQ0ssQ0FBQyxVQUdqRixDQUFDLFVBQUNnQixLQUFLLEVBQUs7SUFDaEJDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDQSxLQUFLLENBQUMsRUFBQztFQUN2QixDQUFDLENBQUM7QUFDTixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9sb2FkR29vZ2xlTWFwc0FQSS50cz9kNmE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluaXRNYXAgfSBmcm9tICcuL2luaXRNYXAnXG5cbmludGVyZmFjZSBHb29nbGVNYXBzQ29uZmlnIHtcbiAga2V5OiBzdHJpbmdcbiAgdjogc3RyaW5nXG59XG5cbi8vR29vZ2xlTWFwc0FQSeOBruODnuODi+ODpeOCouODq+OBp+WFrOihqOOBleOCjOOBpuOBhOOCi+W8j+OCkuS/ruato1xuZXhwb3J0IGNvbnN0IGxvYWRHb29nbGVNYXBzQVBJID0gKFxuICBzZXRNYXA6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPGdvb2dsZS5tYXBzLk1hcCB8IG51bGw+PixcbikgPT4ge1xuICAvLyBHb29nbGUgTWFwcyBBUEnjga7oqK3lrppcbiAgY29uc3QgY29uZmlnOiBHb29nbGVNYXBzQ29uZmlnID0ge1xuICAgIGtleTogcHJvY2Vzcy5lbnYuR09PR0xFX01BUFNfQVBJX0tFWSB8fCAnJyxcbiAgICB2OiAnYmV0YScsXG4gIH1cblxuICAvLyBHb29nbGUgTWFwcyBBUEnjga7jgrnjgq/jg6rjg5fjg4jjgpLpnZ7lkIzmnJ/jgafjg63jg7zjg4njgZnjgovplqLmlbBcbiAgY29uc3QgbG9hZFNjcmlwdCA9IChzcmM6IHN0cmluZyk6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25zdCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuICAgICAgc2NyaXB0LnNyYyA9IHNyY1xuICAgICAgc2NyaXB0Lm9ubG9hZCA9ICgpID0+IHJlc29sdmUoKVxuICAgICAgc2NyaXB0Lm9uZXJyb3IgPSAoKSA9PiByZWplY3QobmV3IEVycm9yKCdTY3JpcHQgbG9hZCBlcnJvcicpKVxuICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpXG4gICAgfSlcbiAgfVxuXG4gIC8vIEdvb2dsZSBNYXBzIEFQSeOBruOCueOCr+ODquODl+ODiFVSTOOCkuS9nOaIkFxuICBjb25zdCBzY3JpcHRTcmMgPSBgaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL2pzP2tleT0ke2NvbmZpZy5rZXl9JnY9JHtjb25maWcudn1gXG5cbiBcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKSAvLyDjgqjjg6njg7zjgYznmbrnlJ/jgZfjgZ/jgonjg63jgrDjgavlh7rliptcbiAgICB9KVxufVxuIl0sIm5hbWVzIjpbImxvYWRHb29nbGVNYXBzQVBJIiwic2V0TWFwIiwiY29uZmlnIiwia2V5IiwicHJvY2VzcyIsImVudiIsIkdPT0dMRV9NQVBTX0FQSV9LRVkiLCJ2IiwibG9hZFNjcmlwdCIsInNyYyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwic2NyaXB0IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwib25sb2FkIiwib25lcnJvciIsIkVycm9yIiwiaGVhZCIsImFwcGVuZENoaWxkIiwic2NyaXB0U3JjIiwiY29uY2F0IiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/loadGoogleMapsAPI.ts\n"));

/***/ })

});